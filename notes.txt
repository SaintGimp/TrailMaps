*** Client-side testing:
https:github.com/mizchi/zombie-tester-example/blob/master/test/client_example_test.coffee
http:metaskills.net/mocha-phantomjs/
http:rzrsharp.net/2012/08/01/client-side-testing-insanity.html
http://sinonjs.org/
	

*** Other stuff:
http:brianstoner.com/blog/testing-in-nodejs-with-mocha/
http:jacobmumm.com/2012/09/11/single-page-apps-with-node-and-angular/
http:brianstoner.com/blog/testing-in-nodejs-with-mocha/
http:coenraets.org/blog/2012/10/creating-a-rest-api-using-node-js-express-and-mongodb/
http:coenraets.org/blog/2012/10/nodecellar-sample-application-with-backbone-js-twitter-bootstrap-node-js-express-and-mongodb/
http:howtonode.org/testing-private-state-and-mocking-deps
http:docs.nodejitsu.com/articles/getting-started/how-to-debug-nodejs-applications
http:webdevchecklist.com/

https:github.com/Kronuz/SublimeCodeIntel
http:www.jetbrains.com/webstorm/
https:github.com/ajaxorg/cloud9
https:github.com/joyent/node/wiki/Using-Eclipse-as-Node-Applications-Debugger
https:github.com/jhnns/rewire

*** Tutorials:
http:phuu.net/2012/09/13/node-js-in-real-life-part-1.html
http:tech.flurry.com/regression-testing-api-services-with-restify
http:www.hacksparrow.com/express-js-tutorial.html
http:coenraets.org/blog/2012/10/creating-a-rest-api-using-node-js-express-and-mongodb/
http:javascriptplayground.com/blog/2012/04/node-js-a-todo-app-with-express
http:www.smartjava.org/content/tutorial-nodejs-and-expressjs-part-i-routers
http:chrislarson.me/content/chris-larson/beginners-guide-nodejs-socketio-and-express-framework-installation
http:quickleft.com/blog/getting-started-with-express-in-node
http:www.nodebeginner.org/
http:dailyjs.com/2010/11/01/node-tutorial/

http:brianstoner.com/blog/testing-in-nodejs-with-mocha/

http:naltatis.github.com/jade-syntax-docs/

https:github.com/taitems/Aristo-jQuery-UI-Theme

*** Promises
http://ianbishop.github.com/blog/2013/01/13/escape-from-callback-hell/
http://www.kendoui.com/blogs/teamblog/posts/13-03-28/what-is-the-point-of-promises.aspx
http://wiki.commonjs.org/wiki/Promises/A
https://github.com/kriskowal/q
https://github.com/cujojs/when


*** Testem, Require.JS, and other stuff
http://net.tutsplus.com/tutorials/javascript-ajax/make-javascript-testing-fun-with-testem/
http://hdnrnzk.me/2013/01/09/backbone-jasmine-requirejs-and-testem/
https://npmjs.org/package/grunt-testem
http://stackoverflow.com/questions/11439540/how-can-i-mock-dependencies-for-unit-testing-in-requirejs
http://stackoverflow.com/questions/14251614/how-do-i-avoid-introducing-global-leaks-when-using-squire-js-with-requirejs-and?rq=1
http://tobyho.com/2012/09/12/better-tdd-workflow-via-exclusive-tests-in-jasmine-and-mocha/

*** Browser integration tests
http://theycallmeswift.com/2012/05/01/excuse-me-thats-not-an-integration-test/

*** Sublime Text
http://blog.alexmaccaw.com/sublime-text
http://drewbarontini.com/setup/sublime-text/

*** Discourse
http://blog.discourse.org/2013/04/discourse-as-your-first-rails-app/

*** iTerm
http://90kts.com/2011/09/29/split-panes-and-remembered-sessions-in-iterm2/
http://serverfault.com/questions/2746/how-do-i-launch-terminal-commands-into-multiple-tabs
https://code.google.com/p/iterm2/wiki/AppleScript
http://www.iterm2.com/#/section/faq
http://hints.macworld.com/article.php?story=20070409141256538

*** Knockout
https://chrome.google.com/webstore/detail/knockoutjs-context-debugg/oddcpmchholgcjgjdnfjmildmlielhof


*** Find in Files
/Users/elee/Projects/GitHub/TrailMaps/,*.js,-/Users/elee/Projects/GitHub/TrailMaps/node_modules/*,-/Users/elee/Projects/GitHub/TrailMaps/test/lib/*,-/Users/elee/Projects/GitHub/TrailMaps/public/js/lib/*,-/Users/elee/Projects/GitHub/TrailMaps/public/bootstrap/*

Debuggers:
Node Inspector https://github.com/node-inspector/node-inspector
Webstorm http://www.jetbrains.com/webstorm/
Brackets http://brackets.io/

Note on Bootstrap 3:
> Now we've got v3 which has all sorts of wack colors and typography, like someone wanted to go "flat" but gave up halfway through.
The idea of BS3 wasn't so much "flat" as it was a "remove gradients to allow easier customisation". Previously (in BC2) you had to override a ton of stuff to get "sane" buttons again. BS3 just gives you simple buttons that you can add to immediately. Same goes for the nav-bar. I much prefer it this way.
reply
	

efsavage 1 hour ago | link

I can see that, I guess it's just going after a different use case than I was using it for (i.e. the decent designer-less site). It has no real value to me if I have to go through and style everything over again.
reply
	

clone1018 38 minutes ago | link

Just head on over to Bootswatch and pick out your favorite theme, that's your new bootstrap :p
My favorites so far are http://bootswatch.com/cerulean/
reply